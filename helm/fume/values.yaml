# Default values for fume.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
nameOverride: ""
fullnameOverride: ""

# Enable/disable frontend deployment
enableFrontend: true

# Image configuration
image:
  backend:
    repository: outburnltd/fume-enterprise-server
    tag: "latest"
  frontend:
    repository: outburnltd/fume-designer
    tag: "latest"
  pullPolicy: IfNotPresent
  pullSecret: "dockerhub-secret"  # Required for private Docker Hub images

# Backend configuration
backend:
  replicaCount: 1
  
  resources:
    limits:
      cpu: 1500m
      memory: 5Gi
    requests:
      cpu: 750m
      memory: 2.5Gi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Frontend configuration (when enabled)
frontend:
  replicaCount: 1
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Service configuration
service:
  backend:
    type: ClusterIP
    port: 42420
    targetPort: 42420
  frontend:
    type: ClusterIP
    port: 3000
    targetPort: 3000

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: fume.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls: []
  #  - secretName: fume-tls
  #    hosts:
  #      - fume.local

# Storage configuration
storage:
  snapshots:
    enabled: true
    size: 5Gi
    storageClass: ""
    accessMode: ReadWriteOnce
  templates:
    enabled: true
    size: 1Gi
    storageClass: ""
    accessMode: ReadWriteOnce

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Secrets (referenced by name, not created by this chart)
secrets:
  fume: "fume-secrets"  # Name of the secret containing sensitive config
  license: "fume-license"  # Name of the secret containing license.key

# Environment variables
env:
  # Backend (FUME Engine) variables
  SERVER_PORT: "42420"
  FHIR_VERSION: "4.0.1"
  FHIR_SERVER_AUTH_TYPE: "NONE"  # BASIC or NONE
  
  # Frontend (FUME Designer) variables
  FUME_DESIGNER_HEADLINE: "FUME Designer"
  
  # Proxy configuration (optional)
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  NO_PROXY: "localhost,127.0.0.1"

# ConfigMap data (non-secret values)
# Note: Required values must be provided during installation
configMap:
  # CANONICAL_BASE_URL: ""  # REQUIRED: Base URL for canonical URLs - set via --set configMap.CANONICAL_BASE_URL="https://your-fhir-server.com"
  FHIR_PACKAGES: "il.core.fhir.r4,fhir.tx.support.r4,fume.outburn.r4"
  
  # FUME_SERVER_URL: ""     # REQUIRED: URL for browser to access FUME engine - set via --set configMap.FUME_SERVER_URL="https://your-fume-api.com"

# Liveness and readiness probes
probes:
  backend:
    liveness:
      enabled: true
      path: /
      initialDelaySeconds: 120  # 2 minutes for warm start, will be faster on restart
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 10      # Allow for slow startup (10 * 30s = 5min tolerance)
    readiness:
      enabled: true
      path: /
      initialDelaySeconds: 60   # 1 minute initial delay
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30      # Allow up to 30 minutes for cold start (30 * 10s)
  frontend:
    liveness:
      enabled: true
      path: /
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      enabled: true
      path: /
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 6

# Auto-scaling configuration
autoscaling:
  backend:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  frontend:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
