1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.backend.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "fume.fullname" . }}-backend)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.backend.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "fume.fullname" . }}-backend'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "fume.fullname" . }}-backend --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.backend.port }}
{{- else if contains "ClusterIP" .Values.service.backend.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "fume.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=backend" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:42420 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 42420:$CONTAINER_PORT
{{- end }}

2. FUME Backend Status:
   Backend is always deployed and running.
   {{- if .Values.enableFrontend }}
   Frontend is enabled and deployed.
   {{- else }}
   Frontend is disabled.
   {{- end }}

3. Storage:
   {{- if .Values.storage.snapshots.enabled }}
   - Snapshots PVC: {{ include "fume.fullname" . }}-snapshots ({{ .Values.storage.snapshots.size }})
   {{- end }}
   {{- if .Values.storage.templates.enabled }}
   - Templates PVC: {{ include "fume.fullname" . }}-templates ({{ .Values.storage.templates.size }})
   {{- end }}
   - Logs: EmptyDir volumes

4. Security:
   - License mounted from secret: {{ .Values.secrets.license }}
   - Application secrets from: {{ .Values.secrets.fume }}
   {{- if .Values.image.pullSecret }}
   - Image pull secret: {{ .Values.image.pullSecret }}
   {{- end }}

5. Configuration:
   - ConfigMap: {{ include "fume.fullname" . }}-config
   - Environment variables configured via values.yaml

{{- if .Values.autoscaling.backend.enabled }}

6. Auto-scaling is enabled:
   - Backend: {{ .Values.autoscaling.backend.minReplicas }}-{{ .Values.autoscaling.backend.maxReplicas }} replicas
   {{- if and .Values.enableFrontend .Values.autoscaling.frontend.enabled }}
   - Frontend: {{ .Values.autoscaling.frontend.minReplicas }}-{{ .Values.autoscaling.frontend.maxReplicas }} replicas
   {{- end }}
{{- end }}
